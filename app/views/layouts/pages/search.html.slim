doctype html
html.fill-height
  head
    title Search Camposaurus
    meta name="keywords" contents='Michigan Camping, travel, Camposaurus, camp that, campgrounds, rustic camping, rv parks, budget camping, camping sites, backcountry camping, backcountry camping, rv campgrounds'
    meta name="description" content="Camposaurus is the best site for finding information about Michigan Camping.  It has a complete listing of public campgrounds in Michigan, including rustic camping, RV campgrounds, and backcountry or backpacking camping sites."
    == render 'layouts/headstyles'
    link href='//api.tiles.mapbox.com/mapbox.js/v1.6.1/mapbox.css' rel='stylesheet'
    == render 'layouts/headscripts'

  body.fill-height
    == render 'layouts/modals/standardModals'
    == render 'layouts/navbar'
    #results-container.col-md-4.well.white
      .result-list
        / Time filter - doesn't work yet==========
          .row
            .input-group.col-md-6
              span.input-group-addon 
                span.glyphicon.glyphicon-calendar
                | When
              input#fromDate.form-control type="text" placeholder="Monday"
            .input-group.col-md-6
              span.input-group-addon to
              input#toDate.form-control type="text" placeholder="Monday"
        / Vibe filters======================
        .row
          - @tribes.first(3).each do |tribe|
            .col-md-2
              .searchFilterThumbnail.thumbnail style="padding:5px;" data-tribe-id=tribe.id
                = image_tag tribe.icon.url(:small), class:'img-circle img-responsive tribe-background'
              p.no-spacing.text-center
                  small.no-spacing
                    small.no-spacing = tribe.vibe
          .col-md-2
            #allSearchFilter.searchFilterThumbnail.thumbnail data-tribe-id="0"
              = image_tag @tribes.find(1).icon.url(:small), class:'img-circle img-responsive tribe-background'
            p.no-spacing.text-center
                small.no-spacing
                  small.no-spacing Show all
          .col-md-12
            hr
        /
          .row
            a#resetSearchArea href="#" Reset search area

        / .row
          p.col-md-12
            #reset.btn.btn-default Search this area
            = tag :input, id: 'searchJson', type: 'hidden', value: 'test', data: {center: @center, geoJson: @campsites.to_json}
        / If no results ===============
        - if @campsites.blank?
          .col-md-12
            .panel.panel-warning
              .panel-heading Frick-o-saurus!  No campsites matched your search.
              .panel-body
                ul
                  li Maybe my reptile-computer brain didn't recognize the place you entered.
                  li Maybe the place you entered isn't in Michigan?  Right now, Michigan is Camposaurus's only habitat.
                  li Maybe you did nothing wrong and I'm just messed up now.  If so, voracious apologies to you, human.  Please consider leaving feedback so my puny human creators can help me evolve and fix this problem.

        / Results ======================
        .row
          - @campsites.each do |campsite|
            .searchResult data-tribes=campsite.tribes_json
              .col-md-2
                = image_tag campsite.primary_icon(:small), class:'img-circle img-responsive tribe-subtle'
              p.lead.col-md-10
                small = link_to campsite.name, campsite_path(campsite)
                br
                small
                  small.subtle-text
                    | #{campsite.org} campground in #{campsite.state_name}
                br
              p.col-md-10.col-md-offset-2
                | Ranked ##{campsite.city_rank} of #{campsite.city.campsites.size}&nbsp;
                small
                  small = link_to "campsites in #{campsite.city.name}, #{campsite.state_name}", campsite.city
                br
                = render "searchRating", campsite:campsite
                br
                small
                  strong.subtle-text Bookings:
                  - if campsite.reservable
                    |  Accepts reservations
                  - else
                    |  No reservations
                  |  &
                  - if campsite.walkin
                    |  accepts walk-ins
                  - else
                    |  no walk-ins
              p.col-md-offset-2.col-md-12
                - if campsite.res_phone?
                  small.subtle-text
                    span.glyphicon.glyphicon-earphone
                    |  #{number_to_phone(campsite.res_phone)}&nbsp;&nbsp;
                - else 
                  small.subtle-text
                    span.glyphicon.glyphicon-earphone
                    |  #{number_to_phone(campsite.camp_phone)}&nbsp;&nbsp;
                - if campsite.res_url?
                  small.subtle-text
                    span.glyphicon.glyphicon-globe
                    | &nbsp;
                    a href=campsite.res_url Online reservations
              .col-md-10.col-md-offset-2
                = render 'layouts/campsiteCommands', campsite:campsite
              hr.col-md-12
        .row
          p.col-md-12
            small.subtle-text 
              | CampAwesome &copy 2014&nbsp;
              = link_to 'Terms', terms_path

    / MapBox ===============================
    .col-md-8.mapColumn.fill-height.no-spacing
      script src='https://api.tiles.mapbox.com/mapbox.js/v1.6.1/mapbox.js'
      #resultsMap

  javascript:
    highlightSearchThumbnail($('#allSearchFilter'));
    // Create the initial map
    var map = L.mapbox.map("resultsMap", "campawesome.h5d0p7ea").setView(gon.center, gon.zoom);
    map.zoomControl.setPosition('bottomright'); // move the map zoom control
    map.markerLayer.setGeoJSON(gon.geoJson); // set the marker layer
    var popupContent =  '<h2>' + feature.properties.title + '</h2>';
    marker.bindPopup(popupContent,{
            closeButton: false,
            minWidth: 320
        });
  javascript:
    // Apply hover effect
    $(".searchFilterThumbnail").hover( function(){
      searchHoverEffect( $(this) );
    });
    // Set click behaviors for filter
    $(".searchFilterThumbnail").click( function(){
      highlightSearchThumbnail($(this));
      var filterId = $(this).data('tribe-id');
      filterSearchResults(filterId); // Filter the list of search results
      // Filter out map markers that don't match
      map.featureLayer.setFilter(function(f) { 
        if (filterId != 0) {
          for (x in f.properties['tribes']) {
            if (f.properties['tribes'][x] == filterId) {
              return true;
            }
          }
        } else {
          map.featureLayer.setFilter(function(f) { return true; });
        }
        //return f.properties['title'] === "Endor Campsite";
      });
      return false;
    });

    // reset map based on current location DOESN'T WORK
    /*$("#resetSearchArea").click( function(){
      var currentCenter = map.getCenter(); // Gets the current center of the map as an Leaflet LatLng
      var mapBounds = map.getBounds(); // Gets the SW and NE corners of the map as a Leaflet LatLngBound
      var southWest = map.getBounds().getSouthWest(); // Returns the SW corner
      var distanceInMeters = mapCenter.distanceTo(southWest); // Returns the distance in meters
      alert(distanceInMeters);  // FAILS HERE
      var distanceInMiles = distanceInMeters * .000621371; // Calculates the distance in miles
      alert(distanceInMiles);
      alert("Center:" + currentCenter + "SW:" + southWest + "Distance:" + distanceInMiles);
    });*/

    /* Apply the initial filter, if any
    if (gon.initTribe) { 
      var filterId = gon.initTribe;
    } else { 
      var filterId = 0; 
    }
    $('.searchFilterThumbnail').each( function() {
      if ( $(this).data('tribe-id') == filterId) {
        highlightSearchFilter( $(this) );
      }
    });
    /*function applyFilter(tribalId) {
      $(".browseResult").hide();
      if (tribalId == 0) {
        $(".browseResult").show();
      } else {
        $(".browseResult").each( function () {
          var targetResult = $(this);
          var tribeIds = targetResult.data("tribes"); // gets tribe ids for the campsite
          for (x in tribeIds) {
            if (tribeIds[x] == tribalId) { targetResult.show(); }
          }  
            });
          }
        }*/